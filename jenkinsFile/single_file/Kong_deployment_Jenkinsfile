pipeline{   
    parameters {
            string defaultValue: 'master', description: 'Enter Your Branch', name: 'BRANCH'
            choice choices: ['default', 'sandbox','production'], description: "Choose Workspace From Dropdown- ", name: 'WORKSPACE'
            string defaultValue: '', description: 'Enter Open Spec Config File Name', name: 'OPEN_SPEC_FILE'
        }
   agent any
   stages {
        //Lint the OpenAPI spec using Insomnia CLI
        stage('Lint OpenAPI Spec') {
            steps {
                sh 'inso lint spec ./apiConfig/$OPEN_SPEC_FILE'
            }
        }
        //Generate Kong configuration in declarative format
        stage('Generate Kong configuration in declarative format') {
            steps {
                sh 'inso generate config ./apiConfig/$OPEN_SPEC_FILE --type declarative -o ./apiConfig/$OPEN_SPEC_FILE'
            }
        }
        //Display the contents of the generated Kong configuration
        stage('open kong.yaml') {
            steps {
                sh 'cat ./apiConfig/$OPEN_SPEC_FILE'
            }
        }

        //Validate the Kong configuration using deck CLI
        stage('Validate the Kong configuration using deck CLI') {
            steps {
                echo "$OPEN_SPEC_FILE"
                sh 'deck validate -s ./apiConfig/$OPEN_SPEC_FILE'
            }
        }
        //Convert the Kong configuration to version 3.x using deck CLI
        stage('Convert kong declarative') {
            steps {
                
                sh 'yes | deck convert --from kong-gateway-2.x --to kong-gateway-3.x --input-file ./apiConfig/$OPEN_SPEC_FILE --output-file ./apiConfig/$OPEN_SPEC_FILE'
            }
        } 
        //Deploy to Kong
        stage('Deploy to Kong') {
            steps {
                withCredentials([string(credentialsId: 'kong_admin_api_host', variable: 'kong_admin_api_host')]) {
                  sh 'deck sync -s ./apiConfig/$OPEN_SPEC_FILE --kong-addr $kong_admin_api_host --workspace $WORKSPACE --tls-skip-verify'
                }
            }
        }
        //schedule the another job
        stage('Scheduling Job - publishOASToKongPortal') {
            steps {
                script{
                    build job: 'publishOASToKongPortal', 
                    parameters:[[$class: 'StringParameterValue', name: 'BRANCH', value: "${BRANCH}"],
                                [$class: 'StringParameterValue', name: 'WORKSPACE', value: "${WORKSPACE}"]]      
                }  
            }
        }
   }
   post {
        always {
           deleteDir()
       }
    }
}